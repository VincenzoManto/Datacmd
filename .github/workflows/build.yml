
name: Build & Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

 
jobs:
  build:
     
    runs-on: ubuntu-latest
    
     
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'  

       
      - name: Get Tag Name
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF}"

       
      - name: Build for Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -o datacmd-linux
          chmod +x datacmd-linux

       
       
      - name: Build for Windows
        run: |
          GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -o datacmd-windows.exe

       
      - name: Build for macOS
        run: |
          GOOS=darwin GOARCH=amd64 go build -o datacmd-macos

       
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.TAG_NAME }}
          release_name: Release ${{ steps.get_tag.outputs.TAG_NAME }}
          draft: false
          prerelease: false

       
      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./datacmd-linux
          asset_name: datacmd-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./datacmd-windows.exe
          asset_name: datacmd-windows.exe
          asset_content_type: application/octet-stream
      
      - name: Upload macOS Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./datacmd-macos
          asset_name: datacmd-macos
          asset_content_type: application/octet-stream
